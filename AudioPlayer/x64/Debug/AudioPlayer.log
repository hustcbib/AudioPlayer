  Moc'ing AudioPlayer.h...
C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppBuild.targets(944,5): warning MSB8027: 名为 qrc_audioplayer.cpp 的两个或更多文件将生成到同一位置的输出。这会导致错误的生成结果。   调用的文件是 GeneratedFiles\qrc_audioplayer.cpp, GeneratedFiles\qrc_AudioPlayer.cpp。
  AudioPlayer.cpp
  main.cpp
  moc_AudioPlayer.cpp
c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qtextdocument.h(77): error C2061: 语法错误: 标识符“WhiteSpaceMode” (编译源文件 main.cpp)
c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qtextdocument.h(77): error C2061: 语法错误: 标识符“WhiteSpaceMode” (编译源文件 AudioPlayer.cpp)
c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qtextdocument.h(77): error C2061: 语法错误: 标识符“WhiteSpaceMode” (编译源文件 GeneratedFiles\Debug\moc_AudioPlayer.cpp)
d:\hust_item\hustcode\pianocode\audioplayer\audioplayer\audioplayer.h(43): error C2039: “WFlags”: 不是“Qt”的成员 (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qstring.h(1861): note: 参见“Qt”的声明 (编译源文件 AudioPlayer.cpp)
d:\hust_item\hustcode\pianocode\audioplayer\audioplayer\audioplayer.h(43): error C2039: “WFlags”: 不是“Qt”的成员 (编译源文件 GeneratedFiles\Debug\moc_AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qstring.h(1861): note: 参见“Qt”的声明 (编译源文件 GeneratedFiles\Debug\moc_AudioPlayer.cpp)
d:\hust_item\hustcode\pianocode\audioplayer\audioplayer\audioplayer.h(43): error C2061: 语法错误: 标识符“WFlags” (编译源文件 AudioPlayer.cpp)
d:\hust_item\hustcode\pianocode\audioplayer\audioplayer\audioplayer.h(43): error C2061: 语法错误: 标识符“WFlags” (编译源文件 GeneratedFiles\Debug\moc_AudioPlayer.cpp)
d:\hust_item\hustcode\pianocode\audioplayer\audioplayer\audioplayer.h(43): error C2039: “WFlags”: 不是“Qt”的成员 (编译源文件 main.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qstring.h(1861): note: 参见“Qt”的声明 (编译源文件 main.cpp)
d:\hust_item\hustcode\pianocode\audioplayer\audioplayer\audioplayer.h(43): error C2061: 语法错误: 标识符“WFlags” (编译源文件 main.cpp)
d:\hust_item\hustcode\pianocode\audioplayer\audioplayer\audioplayer.cpp(46): error C2039: “WFlags”: 不是“Qt”的成员
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qstring.h(1861): note: 参见“Qt”的声明
d:\hust_item\hustcode\pianocode\audioplayer\audioplayer\audioplayer.cpp(46): error C2061: 语法错误: 标识符“WFlags”
d:\hust_item\hustcode\pianocode\audioplayer\audioplayer\audioplayer.cpp(47): error C2065: “flags”: 未声明的标识符
d:\hust_item\hustcode\pianocode\audioplayer\audioplayer\main.cpp(10): error C2039: “setCodecForCStrings”: 不是“QTextCodec”的成员
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qtextcodec.h(56): note: 参见“QTextCodec”的声明
d:\hust_item\hustcode\pianocode\audioplayer\audioplayer\main.cpp(10): error C3861: “setCodecForCStrings”: 找不到标识符
d:\hust_item\hustcode\pianocode\audioplayer\audioplayer\main.cpp(11): error C2039: “setCodecForTr”: 不是“QTextCodec”的成员
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qtextcodec.h(56): note: 参见“QTextCodec”的声明
d:\hust_item\hustcode\pianocode\audioplayer\audioplayer\main.cpp(11): error C3861: “setCodecForTr”: 找不到标识符
d:\hust_item\hustcode\pianocode\audioplayer\audioplayer\audioplayer.cpp(1394): error C2027: 使用了未定义类型“QDebug”
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qtouchdevice.h(48): note: 参见“QDebug”的声明
d:\hust_item\hustcode\pianocode\audioplayer\audioplayer\audioplayer.cpp(1394): error C2678: 二进制“<<”: 没有找到接受“QDebug”类型的左操作数的运算符(或没有可接受的转换)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qdatetime.h(406): note: 可能是“QDebug operator <<(QDebug,const QTime &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qdatetime.h(405): note: 或    “QDebug operator <<(QDebug,const QDate &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qdatetime.h(390): note: 或    “QDebug operator <<(QDebug,const QDateTime &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qdatetime.h(385): note: 或    “QDataStream &operator <<(QDataStream &,const QDateTime &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qdatetime.h(212): note: 或    “QDataStream &operator <<(QDataStream &,const QTime &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qdatetime.h(148): note: 或    “QDataStream &operator <<(QDataStream &,const QDate &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qevent.h(989): note: 或    “QDebug operator <<(QDebug,const QTouchEvent::TouchPoint &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qevent.h(800): note: 或    “QDebug operator <<(QDebug,const QEvent *)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qtouchdevice.h(96): note: 或    “QDebug operator <<(QDebug,const QTouchDevice *)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qvector2d.h(281): note: 或    “QDataStream &operator <<(QDataStream &,const QVector2D &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qvector2d.h(277): note: 或    “QDebug operator <<(QDebug,const QVector2D &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qtextstream.h(233): note: 或    “QTextStream &operator <<(QTextStream &,QTextStreamManipulator)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qtextstream.h(230): note: 或    “QTextStream &operator <<(QTextStream &,QTextStreamFunction)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qdir.h(240): note: 或    “QDebug operator <<(QDebug,const QDir &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qdir.h(239): note: 或    “QDebug operator <<(QDebug,QDir::Filters)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qfileinfo.h(162): note: 或    “QDebug operator <<(QDebug,const QFileInfo &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qtextformat.h(131): note: 或    “QDebug operator <<(QDebug,const QTextFormat &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qtextformat.h(126): note: 或    “QDataStream &operator <<(QDataStream &,const QTextFormat &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qtextformat.h(81): note: 或    “QDebug operator <<(QDebug,const QTextLength &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qtextformat.h(76): note: 或    “QDataStream &operator <<(QDataStream &,const QTextLength &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qpen.h(136): note: 或    “QDebug operator <<(QDebug,const QPen &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qpen.h(56): note: 或    “QDataStream &operator <<(QDataStream &,const QPen &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qurl.h(415): note: 或    “QDebug operator <<(QDebug,const QUrl &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qurl.h(410): note: 或    “QDataStream &operator <<(QDataStream &,const QUrl &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qitemselectionmodel.h(268): note: 或    “QDebug operator <<(QDebug,const QItemSelectionRange &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtwidgets\qstyleoption.h(761): note: 或    “QDebug operator <<(QDebug,const QStyleOption &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtwidgets\qstyleoption.h(760): note: 或    “QDebug operator <<(QDebug,const QStyleOption::OptionType &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qabstractitemmodel.h(148): note: 或    “QDebug operator <<(QDebug,const QPersistentModelIndex &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qabstractitemmodel.h(100): note: 或    “QDebug operator <<(QDebug,const QModelIndex &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtwidgets\qstyle.h(877): note: 或    “QDebug operator <<(QDebug,QStyle::State)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qregularexpression.h(248): note: 或    “QDebug operator <<(QDebug,const QRegularExpressionMatch &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qregularexpression.h(177): note: 或    “QDebug operator <<(QDebug,QRegularExpression::PatternOptions)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qregularexpression.h(176): note: 或    “QDebug operator <<(QDebug,const QRegularExpression &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qregularexpression.h(171): note: 或    “QDataStream &operator <<(QDataStream &,const QRegularExpression &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qlocale.h(1127): note: 或    “QDebug operator <<(QDebug,const QLocale &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qlocale.h(1122): note: 或    “QDataStream &operator <<(QDataStream &,const QLocale &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qcoreapplication.h(264): note: 或    “QDebug operator <<(QDebug,const MSG &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtwidgets\qaction.h(217): note: 或    “QDebug operator <<(QDebug,const QAction *)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qvariant.h(884): note: 或    “QDebug operator <<(QDebug,const QVariant::Type)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qvariant.h(565): note: 或    “QDataStream &operator <<(QDataStream &,const QVariant::Type)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qvariant.h(563): note: 或    “QDataStream &operator <<(QDataStream &,const QVariant &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qvariant.h(470): note: 或    “QDebug operator <<(QDebug,const QVariant &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qicon.h(152): note: 或    “QDebug operator <<(QDebug,const QIcon &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qicon.h(135): note: 或    “QDataStream &operator <<(QDataStream &,const QIcon &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtwidgets\qwidget.h(876): note: 或    “QDebug operator <<(QDebug,const QWidget *)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qkeysequence.h(229): note: 或    “QDebug operator <<(QDebug,const QKeySequence &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qkeysequence.h(58): note: 或    “QDataStream &operator <<(QDataStream &,const QKeySequence &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qcursor.h(132): note: 或    “QDebug operator <<(QDebug,const QCursor &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qcursor.h(127): note: 或    “QDataStream &operator <<(QDataStream &,const QCursor &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtwidgets\qsizepolicy.h(242): note: 或    “QDebug operator <<(QDebug,const QSizePolicy &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtwidgets\qsizepolicy.h(173): note: 或    “QDataStream &operator <<(QDataStream &,const QSizePolicy &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qfont.h(364): note: 或    “QDebug operator <<(QDebug,const QFont &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qfont.h(325): note: 或    “QDataStream &operator <<(QDataStream &,const QFont &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qpalette.h(212): note: 或    “QDebug operator <<(QDebug,const QPalette &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qpalette.h(190): note: 或    “QDataStream &operator <<(QDataStream &,const QPalette &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qbrush.h(149): note: 或    “QDebug operator <<(QDebug,const QBrush &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qbrush.h(144): note: 或    “QDataStream &operator <<(QDataStream &,const QBrush &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qpixmap.h(248): note: 或    “QDebug operator <<(QDebug,const QPixmap &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qpixmap.h(243): note: 或    “QDataStream &operator <<(QDataStream &,const QPixmap &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qimage.h(491): note: 或    “QDebug operator <<(QDebug,const QImage &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qimage.h(486): note: 或    “QDataStream &operator <<(QDataStream &,const QImage &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qtransform.h(378): note: 或    “QDebug operator <<(QDebug,const QTransform &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qtransform.h(373): note: 或    “QDataStream &operator <<(QDataStream &,const QTransform &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qpainterpath.h(373): note: 或    “QDebug operator <<(QDebug,const QPainterPath &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qpainterpath.h(229): note: 或    “QDataStream &operator <<(QDataStream &,const QPainterPath &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qmatrix.h(189): note: 或    “QDebug operator <<(QDebug,const QMatrix &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qmatrix.h(184): note: 或    “QDataStream &operator <<(QDataStream &,const QMatrix &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qline.h(428): note: 或    “QDataStream &operator <<(QDataStream &,const QLineF &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qline.h(424): note: 或    “QDebug operator <<(QDebug,const QLineF &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qline.h(207): note: 或    “QDataStream &operator <<(QDataStream &,const QLine &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qline.h(203): note: 或    “QDebug operator <<(QDebug,const QLine &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qregion.h(196): note: 或    “QDebug operator <<(QDebug,const QRegion &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qregion.h(162): note: 或    “QDataStream &operator <<(QDataStream &,const QRegion &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qiodevice.h(189): note: 或    “QDebug operator <<(QDebug,QIODevice::OpenMode)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qpolygon.h(195): note: 或    “QDataStream &operator <<(QDataStream &,const QPolygonF &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qpolygon.h(188): note: 或    “QDebug operator <<(QDebug,const QPolygonF &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qpolygon.h(116): note: 或    “QDataStream &operator <<(QDataStream &,const QPolygon &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qpolygon.h(109): note: 或    “QDebug operator <<(QDebug,const QPolygon &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qcolor.h(60): note: 或    “QDataStream &operator <<(QDataStream &,const QColor &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qcolor.h(57): note: 或    “QDebug operator <<(QDebug,const QColor &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qrect.h(919): note: 或    “QDebug operator <<(QDebug,const QRectF &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qrect.h(636): note: 或    “QDataStream &operator <<(QDataStream &,const QRectF &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qrect.h(507): note: 或    “QDebug operator <<(QDebug,const QRect &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qrect.h(176): note: 或    “QDataStream &operator <<(QDataStream &,const QRect &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qpoint.h(413): note: 或    “QDebug operator <<(QDebug,const QPointF &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qpoint.h(277): note: 或    “QDataStream &operator <<(QDataStream &,const QPointF &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qpoint.h(212): note: 或    “QDebug operator <<(QDebug,const QPoint &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qpoint.h(112): note: 或    “QDataStream &operator <<(QDataStream &,const QPoint &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qsize.h(386): note: 或    “QDebug operator <<(QDebug,const QSizeF &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qsize.h(276): note: 或    “QDataStream &operator <<(QDataStream &,const QSizeF &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qsize.h(211): note: 或    “QDebug operator <<(QDebug,const QSize &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qsize.h(108): note: 或    “QDataStream &operator <<(QDataStream &,const QSize &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qmargins.h(487): note: 或    “QDebug operator <<(QDebug,const QMarginsF &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qmargins.h(327): note: 或    “QDataStream &operator <<(QDataStream &,const QMarginsF &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qmargins.h(278): note: 或    “QDebug operator <<(QDebug,const QMargins &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qmargins.h(94): note: 或    “QDataStream &operator <<(QDataStream &,const QMargins &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qobject.h(531): note: 或    “QDebug operator <<(QDebug,const QObject *)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qregexp.h(129): note: 或    “QDebug operator <<(QDebug,const QRegExp &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qregexp.h(124): note: 或    “QDataStream &operator <<(QDataStream &,const QRegExp &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qstring.h(1415): note: 或    “QDataStream &operator <<(QDataStream &,const QString &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qbytearray.h(695): note: 或    “QDataStream &operator <<(QDataStream &,const QByteArray &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qchar.h(625): note: 或    “QDataStream &operator <<(QDataStream &,QChar)” (编译源文件 AudioPlayer.cpp)
  d:\hust_item\hustcode\pianocode\audioplayer\audioplayer\audioplayer.cpp(1394): note: 尝试匹配参数列表“(QDebug, const char [21])”时
d:\hust_item\hustcode\pianocode\audioplayer\audioplayer\audioplayer.cpp(1442): error C2027: 使用了未定义类型“QDebug”
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qtouchdevice.h(48): note: 参见“QDebug”的声明
d:\hust_item\hustcode\pianocode\audioplayer\audioplayer\audioplayer.cpp(1442): error C2678: 二进制“<<”: 没有找到接受“QDebug”类型的左操作数的运算符(或没有可接受的转换)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qdatetime.h(406): note: 可能是“QDebug operator <<(QDebug,const QTime &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qdatetime.h(405): note: 或    “QDebug operator <<(QDebug,const QDate &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qdatetime.h(390): note: 或    “QDebug operator <<(QDebug,const QDateTime &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qdatetime.h(385): note: 或    “QDataStream &operator <<(QDataStream &,const QDateTime &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qdatetime.h(212): note: 或    “QDataStream &operator <<(QDataStream &,const QTime &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qdatetime.h(148): note: 或    “QDataStream &operator <<(QDataStream &,const QDate &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qevent.h(989): note: 或    “QDebug operator <<(QDebug,const QTouchEvent::TouchPoint &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qevent.h(800): note: 或    “QDebug operator <<(QDebug,const QEvent *)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qtouchdevice.h(96): note: 或    “QDebug operator <<(QDebug,const QTouchDevice *)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qvector2d.h(281): note: 或    “QDataStream &operator <<(QDataStream &,const QVector2D &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qvector2d.h(277): note: 或    “QDebug operator <<(QDebug,const QVector2D &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qtextstream.h(233): note: 或    “QTextStream &operator <<(QTextStream &,QTextStreamManipulator)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qtextstream.h(230): note: 或    “QTextStream &operator <<(QTextStream &,QTextStreamFunction)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qdir.h(240): note: 或    “QDebug operator <<(QDebug,const QDir &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qdir.h(239): note: 或    “QDebug operator <<(QDebug,QDir::Filters)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qfileinfo.h(162): note: 或    “QDebug operator <<(QDebug,const QFileInfo &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qtextformat.h(131): note: 或    “QDebug operator <<(QDebug,const QTextFormat &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qtextformat.h(126): note: 或    “QDataStream &operator <<(QDataStream &,const QTextFormat &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qtextformat.h(81): note: 或    “QDebug operator <<(QDebug,const QTextLength &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qtextformat.h(76): note: 或    “QDataStream &operator <<(QDataStream &,const QTextLength &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qpen.h(136): note: 或    “QDebug operator <<(QDebug,const QPen &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qpen.h(56): note: 或    “QDataStream &operator <<(QDataStream &,const QPen &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qurl.h(415): note: 或    “QDebug operator <<(QDebug,const QUrl &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qurl.h(410): note: 或    “QDataStream &operator <<(QDataStream &,const QUrl &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qitemselectionmodel.h(268): note: 或    “QDebug operator <<(QDebug,const QItemSelectionRange &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtwidgets\qstyleoption.h(761): note: 或    “QDebug operator <<(QDebug,const QStyleOption &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtwidgets\qstyleoption.h(760): note: 或    “QDebug operator <<(QDebug,const QStyleOption::OptionType &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qabstractitemmodel.h(148): note: 或    “QDebug operator <<(QDebug,const QPersistentModelIndex &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qabstractitemmodel.h(100): note: 或    “QDebug operator <<(QDebug,const QModelIndex &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtwidgets\qstyle.h(877): note: 或    “QDebug operator <<(QDebug,QStyle::State)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qregularexpression.h(248): note: 或    “QDebug operator <<(QDebug,const QRegularExpressionMatch &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qregularexpression.h(177): note: 或    “QDebug operator <<(QDebug,QRegularExpression::PatternOptions)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qregularexpression.h(176): note: 或    “QDebug operator <<(QDebug,const QRegularExpression &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qregularexpression.h(171): note: 或    “QDataStream &operator <<(QDataStream &,const QRegularExpression &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qlocale.h(1127): note: 或    “QDebug operator <<(QDebug,const QLocale &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qlocale.h(1122): note: 或    “QDataStream &operator <<(QDataStream &,const QLocale &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qcoreapplication.h(264): note: 或    “QDebug operator <<(QDebug,const MSG &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtwidgets\qaction.h(217): note: 或    “QDebug operator <<(QDebug,const QAction *)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qvariant.h(884): note: 或    “QDebug operator <<(QDebug,const QVariant::Type)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qvariant.h(565): note: 或    “QDataStream &operator <<(QDataStream &,const QVariant::Type)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qvariant.h(563): note: 或    “QDataStream &operator <<(QDataStream &,const QVariant &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qvariant.h(470): note: 或    “QDebug operator <<(QDebug,const QVariant &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qicon.h(152): note: 或    “QDebug operator <<(QDebug,const QIcon &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qicon.h(135): note: 或    “QDataStream &operator <<(QDataStream &,const QIcon &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtwidgets\qwidget.h(876): note: 或    “QDebug operator <<(QDebug,const QWidget *)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qkeysequence.h(229): note: 或    “QDebug operator <<(QDebug,const QKeySequence &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qkeysequence.h(58): note: 或    “QDataStream &operator <<(QDataStream &,const QKeySequence &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qcursor.h(132): note: 或    “QDebug operator <<(QDebug,const QCursor &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qcursor.h(127): note: 或    “QDataStream &operator <<(QDataStream &,const QCursor &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtwidgets\qsizepolicy.h(242): note: 或    “QDebug operator <<(QDebug,const QSizePolicy &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtwidgets\qsizepolicy.h(173): note: 或    “QDataStream &operator <<(QDataStream &,const QSizePolicy &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qfont.h(364): note: 或    “QDebug operator <<(QDebug,const QFont &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qfont.h(325): note: 或    “QDataStream &operator <<(QDataStream &,const QFont &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qpalette.h(212): note: 或    “QDebug operator <<(QDebug,const QPalette &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qpalette.h(190): note: 或    “QDataStream &operator <<(QDataStream &,const QPalette &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qbrush.h(149): note: 或    “QDebug operator <<(QDebug,const QBrush &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qbrush.h(144): note: 或    “QDataStream &operator <<(QDataStream &,const QBrush &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qpixmap.h(248): note: 或    “QDebug operator <<(QDebug,const QPixmap &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qpixmap.h(243): note: 或    “QDataStream &operator <<(QDataStream &,const QPixmap &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qimage.h(491): note: 或    “QDebug operator <<(QDebug,const QImage &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qimage.h(486): note: 或    “QDataStream &operator <<(QDataStream &,const QImage &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qtransform.h(378): note: 或    “QDebug operator <<(QDebug,const QTransform &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qtransform.h(373): note: 或    “QDataStream &operator <<(QDataStream &,const QTransform &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qpainterpath.h(373): note: 或    “QDebug operator <<(QDebug,const QPainterPath &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qpainterpath.h(229): note: 或    “QDataStream &operator <<(QDataStream &,const QPainterPath &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qmatrix.h(189): note: 或    “QDebug operator <<(QDebug,const QMatrix &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qmatrix.h(184): note: 或    “QDataStream &operator <<(QDataStream &,const QMatrix &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qline.h(428): note: 或    “QDataStream &operator <<(QDataStream &,const QLineF &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qline.h(424): note: 或    “QDebug operator <<(QDebug,const QLineF &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qline.h(207): note: 或    “QDataStream &operator <<(QDataStream &,const QLine &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qline.h(203): note: 或    “QDebug operator <<(QDebug,const QLine &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qregion.h(196): note: 或    “QDebug operator <<(QDebug,const QRegion &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qregion.h(162): note: 或    “QDataStream &operator <<(QDataStream &,const QRegion &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qiodevice.h(189): note: 或    “QDebug operator <<(QDebug,QIODevice::OpenMode)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qpolygon.h(195): note: 或    “QDataStream &operator <<(QDataStream &,const QPolygonF &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qpolygon.h(188): note: 或    “QDebug operator <<(QDebug,const QPolygonF &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qpolygon.h(116): note: 或    “QDataStream &operator <<(QDataStream &,const QPolygon &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qpolygon.h(109): note: 或    “QDebug operator <<(QDebug,const QPolygon &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qcolor.h(60): note: 或    “QDataStream &operator <<(QDataStream &,const QColor &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtgui\qcolor.h(57): note: 或    “QDebug operator <<(QDebug,const QColor &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qrect.h(919): note: 或    “QDebug operator <<(QDebug,const QRectF &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qrect.h(636): note: 或    “QDataStream &operator <<(QDataStream &,const QRectF &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qrect.h(507): note: 或    “QDebug operator <<(QDebug,const QRect &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qrect.h(176): note: 或    “QDataStream &operator <<(QDataStream &,const QRect &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qpoint.h(413): note: 或    “QDebug operator <<(QDebug,const QPointF &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qpoint.h(277): note: 或    “QDataStream &operator <<(QDataStream &,const QPointF &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qpoint.h(212): note: 或    “QDebug operator <<(QDebug,const QPoint &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qpoint.h(112): note: 或    “QDataStream &operator <<(QDataStream &,const QPoint &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qsize.h(386): note: 或    “QDebug operator <<(QDebug,const QSizeF &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qsize.h(276): note: 或    “QDataStream &operator <<(QDataStream &,const QSizeF &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qsize.h(211): note: 或    “QDebug operator <<(QDebug,const QSize &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qsize.h(108): note: 或    “QDataStream &operator <<(QDataStream &,const QSize &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qmargins.h(487): note: 或    “QDebug operator <<(QDebug,const QMarginsF &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qmargins.h(327): note: 或    “QDataStream &operator <<(QDataStream &,const QMarginsF &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qmargins.h(278): note: 或    “QDebug operator <<(QDebug,const QMargins &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qmargins.h(94): note: 或    “QDataStream &operator <<(QDataStream &,const QMargins &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qobject.h(531): note: 或    “QDebug operator <<(QDebug,const QObject *)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qregexp.h(129): note: 或    “QDebug operator <<(QDebug,const QRegExp &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qregexp.h(124): note: 或    “QDataStream &operator <<(QDataStream &,const QRegExp &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qstring.h(1415): note: 或    “QDataStream &operator <<(QDataStream &,const QString &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qbytearray.h(695): note: 或    “QDataStream &operator <<(QDataStream &,const QByteArray &)” (编译源文件 AudioPlayer.cpp)
  c:\qt\qt5.12.1\5.12.1\msvc2017_64\include\qtcore\qchar.h(625): note: 或    “QDataStream &operator <<(QDataStream &,QChar)” (编译源文件 AudioPlayer.cpp)
  d:\hust_item\hustcode\pianocode\audioplayer\audioplayer\audioplayer.cpp(1442): note: 尝试匹配参数列表“(QDebug, T)”时
          with
          [
              T=int
          ]
